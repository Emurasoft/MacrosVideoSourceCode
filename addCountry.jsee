#language = "v8"

/**
 * Gets the country name for given phone number.
 * @param {string} phoneNumber
 * @returns {string} Country name. Returns empty string if coutry was not found
 */
function getCountryFromPhoneNumber(phoneNumber) {
    const countryCodes = {
        '1': 'United States',
        '44': 'United Kingdom',
        '81': 'Japan',
        '86': 'China',
        '49': 'Germany',
    };
    
    // Check if it's not a phone number
    if (/[a-zA-Z]/.test(phoneNumber)) {
        return '';
    }

	// Remove spaces and dashes
    const cleanedNumber = phoneNumber.replace(/[^+\d]/g, '');

	// Check for 10 digit number
    if (cleanedNumber.length === 10 && /^\d{10}$/.test(cleanedNumber)) {
        return 'US';
    }

	// Check for country calling code
    const match = phoneNumber.match(/^\+(\d{1,3}) /);
    if (match) {
        const dialingCode = match[1];
        return countryCodes[dialingCode] || '';
    }

    return '';
}

// Temporarily pause redraw of UI
Redraw = false;

for (let lineNumber = 1; lineNumber <= document.GetLines(); lineNumber++) {
	const line = document.GetLine(lineNumber);
	const country = getCountryFromPhoneNumber(line);
	if (country.length > 0) {
		// Go to end of phone number
		document.selection.SetActivePoint(eePosLogical, 1, lineNumber);
		document.selection.EndOfLine();
		
		// Add new line with country
		document.writeln('');
		document.selection.Text = country;
	}
}

Redraw = true;